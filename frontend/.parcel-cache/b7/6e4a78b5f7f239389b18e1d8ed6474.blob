"use strict";
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = Popper;
exports.placements = exports.InnerPopper = void 0;
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _deepEqual = _interopRequireDefault(require("deep-equal"));
var React = _interopRequireWildcard(require("react"));
var _popper = _interopRequireDefault(require("popper.js"));
var _Manager = require("./Manager");
var _utils = require("./utils");
var initialStyle = {
    position: 'absolute',
    top: 0,
    left: 0,
    opacity: 0,
    pointerEvents: 'none'
};
var initialArrowStyle = {
};
var InnerPopper1 = /*#__PURE__*/ function(_React$Component) {
    _inheritsLoose2.default(InnerPopper2, _React$Component);
    function InnerPopper2() {
        var _this;
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        _this = _React$Component.call.apply(_React$Component, [
            this
        ].concat(args)) || this;
        _defineProperty2.default(_assertThisInitialized2.default(_assertThisInitialized2.default(_this)), "state", {
            data: undefined,
            placement: undefined
        });
        _defineProperty2.default(_assertThisInitialized2.default(_assertThisInitialized2.default(_this)), "popperInstance", void 0);
        _defineProperty2.default(_assertThisInitialized2.default(_assertThisInitialized2.default(_this)), "popperNode", null);
        _defineProperty2.default(_assertThisInitialized2.default(_assertThisInitialized2.default(_this)), "arrowNode", null);
        _defineProperty2.default(_assertThisInitialized2.default(_assertThisInitialized2.default(_this)), "setPopperNode", function(popperNode) {
            if (!popperNode || _this.popperNode === popperNode) return;
            _utils.setRef(_this.props.innerRef, popperNode);
            _this.popperNode = popperNode;
            _this.updatePopperInstance();
        });
        _defineProperty2.default(_assertThisInitialized2.default(_assertThisInitialized2.default(_this)), "setArrowNode", function(arrowNode) {
            _this.arrowNode = arrowNode;
        });
        _defineProperty2.default(_assertThisInitialized2.default(_assertThisInitialized2.default(_this)), "updateStateModifier", {
            enabled: true,
            order: 900,
            fn: function fn(data) {
                var placement = data.placement;
                _this.setState({
                    data: data,
                    placement: placement
                });
                return data;
            }
        });
        _defineProperty2.default(_assertThisInitialized2.default(_assertThisInitialized2.default(_this)), "getOptions", function() {
            return {
                placement: _this.props.placement,
                eventsEnabled: _this.props.eventsEnabled,
                positionFixed: _this.props.positionFixed,
                modifiers: _extends2.default({
                }, _this.props.modifiers, {
                    arrow: _extends2.default({
                    }, _this.props.modifiers && _this.props.modifiers.arrow, {
                        enabled: !!_this.arrowNode,
                        element: _this.arrowNode
                    }),
                    applyStyle: {
                        enabled: false
                    },
                    updateStateModifier: _this.updateStateModifier
                })
            };
        });
        _defineProperty2.default(_assertThisInitialized2.default(_assertThisInitialized2.default(_this)), "getPopperStyle", function() {
            return !_this.popperNode || !_this.state.data ? initialStyle : _extends2.default({
                position: _this.state.data.offsets.popper.position
            }, _this.state.data.styles);
        });
        _defineProperty2.default(_assertThisInitialized2.default(_assertThisInitialized2.default(_this)), "getPopperPlacement", function() {
            return !_this.state.data ? undefined : _this.state.placement;
        });
        _defineProperty2.default(_assertThisInitialized2.default(_assertThisInitialized2.default(_this)), "getArrowStyle", function() {
            return !_this.arrowNode || !_this.state.data ? initialArrowStyle : _this.state.data.arrowStyles;
        });
        _defineProperty2.default(_assertThisInitialized2.default(_assertThisInitialized2.default(_this)), "getOutOfBoundariesState", function() {
            return _this.state.data ? _this.state.data.hide : undefined;
        });
        _defineProperty2.default(_assertThisInitialized2.default(_assertThisInitialized2.default(_this)), "destroyPopperInstance", function() {
            if (!_this.popperInstance) return;
            _this.popperInstance.destroy();
            _this.popperInstance = null;
        });
        _defineProperty2.default(_assertThisInitialized2.default(_assertThisInitialized2.default(_this)), "updatePopperInstance", function() {
            _this.destroyPopperInstance();
            var _assertThisInitialize = _assertThisInitialized2.default(_assertThisInitialized2.default(_this)), popperNode = _assertThisInitialize.popperNode;
            var referenceElement = _this.props.referenceElement;
            if (!referenceElement || !popperNode) return;
            _this.popperInstance = new _popper.default(referenceElement, popperNode, _this.getOptions());
        });
        _defineProperty2.default(_assertThisInitialized2.default(_assertThisInitialized2.default(_this)), "scheduleUpdate", function() {
            if (_this.popperInstance) _this.popperInstance.scheduleUpdate();
        });
        return _this;
    }
    var _proto = InnerPopper2.prototype;
    _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
        // If the Popper.js options have changed, update the instance (destroy + create)
        if (this.props.placement !== prevProps.placement || this.props.referenceElement !== prevProps.referenceElement || this.props.positionFixed !== prevProps.positionFixed || !_deepEqual.default(this.props.modifiers, prevProps.modifiers, {
            strict: true
        })) {
            if (this.props.modifiers !== prevProps.modifiers && this.props.modifiers != null && prevProps.modifiers != null && _utils.shallowEqual(this.props.modifiers, prevProps.modifiers)) console.warn("'modifiers' prop reference updated even though all values appear the same.\nConsider memoizing the 'modifiers' object to avoid needless rendering.");
            this.updatePopperInstance();
        } else if (this.props.eventsEnabled !== prevProps.eventsEnabled && this.popperInstance) this.props.eventsEnabled ? this.popperInstance.enableEventListeners() : this.popperInstance.disableEventListeners();
         // A placement difference in state means popper determined a new placement
        // apart from the props value. By the time the popper element is rendered with
        // the new position Popper has already measured it, if the place change triggers
        // a size change it will result in a misaligned popper. So we schedule an update to be sure.
        if (prevState.placement !== this.state.placement) this.scheduleUpdate();
    };
    _proto.componentWillUnmount = function componentWillUnmount() {
        _utils.setRef(this.props.innerRef, null);
        this.destroyPopperInstance();
    };
    _proto.render = function render() {
        return _utils.unwrapArray(this.props.children)({
            ref: this.setPopperNode,
            style: this.getPopperStyle(),
            placement: this.getPopperPlacement(),
            outOfBoundaries: this.getOutOfBoundariesState(),
            scheduleUpdate: this.scheduleUpdate,
            arrowProps: {
                ref: this.setArrowNode,
                style: this.getArrowStyle()
            }
        });
    };
    return InnerPopper2;
}(React.Component);
exports.InnerPopper = InnerPopper1;
_defineProperty2.default(InnerPopper1, "defaultProps", {
    placement: 'bottom',
    eventsEnabled: true,
    referenceElement: undefined,
    positionFixed: false
});
var placements = _popper.default.placements;
exports.placements = placements;
function Popper(_ref) {
    var referenceElement = _ref.referenceElement, props = _objectWithoutPropertiesLoose2.default(_ref, [
        "referenceElement"
    ]);
    return React.createElement(_Manager.ManagerReferenceNodeContext.Consumer, null, function(referenceNode) {
        return React.createElement(InnerPopper1, _extends2.default({
            referenceElement: referenceElement !== undefined ? referenceElement : referenceNode
        }, props));
    });
}
