var helpers = require("../../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
const initialstate = {
    title: "",
    date: "",
    description: "",
    type: "",
    speaker: "",
    charge: 0
};
class UpdateConference extends _react.Component {
    constructor(props){
        super(props);
        this.onChange = this.onChange.bind(this);
        this.onSubmit = this.onSubmit.bind(this);
        this.state = initialstate;
    }
    onChange(e) {
        this.setState({
            [e.target.name]: e.target.value
        });
    }
    componentDidMount() {
        _axiosDefault.default.get("http://localhost:5001/conference/getconference/" + this.props.match.params.id).then((response)=>{
            //console.log(response.data.data.name);
            this.setState({
                title: response.data.data.title,
                date: response.data.data.date,
                description: response.data.data.description,
                type: response.data.data.type,
                speaker: response.data.data.speaker
            });
        }).catch(function(error) {
            console.log(error);
        });
    }
    onSubmit(e) {
        e.preventDefault();
        const conference = {
            title: this.state.title,
            date: this.state.date,
            description: this.state.description,
            type: "pending",
            speaker: this.state.speaker
        };
        console.log(conference);
        _axiosDefault.default.post("http://localhost:5001/conference/updateconference/" + this.props.match.params.id, conference).then((res)=>console.log(res.data)
        );
        window.location = "/list-conference";
    }
    render() {
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: "container",
            __source: {
                fileName: "C:\\Users\\Zaman\\zaman\\AF\\front\\src\\editor\\update\\updateconference.js",
                lineNumber: 73
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement("h1", {
            __source: {
                fileName: "C:\\Users\\Zaman\\zaman\\AF\\front\\src\\editor\\update\\updateconference.js",
                lineNumber: 74
            },
            __self: this
        }, "Edit conference"), /*#__PURE__*/ _reactDefault.default.createElement("form", {
            onSubmit: this.onSubmit,
            __source: {
                fileName: "C:\\Users\\Zaman\\zaman\\AF\\front\\src\\editor\\update\\updateconference.js",
                lineNumber: 75
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: "mb-3",
            __source: {
                fileName: "C:\\Users\\Zaman\\zaman\\AF\\front\\src\\editor\\update\\updateconference.js",
                lineNumber: 76
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement("label", {
            htmlFor: "subjectName",
            className: "form-label",
            __source: {
                fileName: "C:\\Users\\Zaman\\zaman\\AF\\front\\src\\editor\\update\\updateconference.js",
                lineNumber: 77
            },
            __self: this
        }, "Title"), /*#__PURE__*/ _reactDefault.default.createElement("input", {
            type: "text",
            className: "form-control",
            id: "title",
            name: "title",
            value: this.state.title,
            onChange: this.onChange,
            __source: {
                fileName: "C:\\Users\\Zaman\\zaman\\AF\\front\\src\\editor\\update\\updateconference.js",
                lineNumber: 80
            },
            __self: this
        })), /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: "mb-3",
            __source: {
                fileName: "C:\\Users\\Zaman\\zaman\\AF\\front\\src\\editor\\update\\updateconference.js",
                lineNumber: 90
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement("label", {
            htmlFor: "subjectName",
            className: "form-label",
            __source: {
                fileName: "C:\\Users\\Zaman\\zaman\\AF\\front\\src\\editor\\update\\updateconference.js",
                lineNumber: 91
            },
            __self: this
        }, "Date"), /*#__PURE__*/ _reactDefault.default.createElement("input", {
            type: "text",
            className: "form-control",
            id: "date",
            name: "date",
            value: this.state.date,
            onChange: this.onChange,
            __source: {
                fileName: "C:\\Users\\Zaman\\zaman\\AF\\front\\src\\editor\\update\\updateconference.js",
                lineNumber: 94
            },
            __self: this
        })), /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: "mb-3",
            __source: {
                fileName: "C:\\Users\\Zaman\\zaman\\AF\\front\\src\\editor\\update\\updateconference.js",
                lineNumber: 104
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement("label", {
            htmlFor: "subjectName",
            className: "form-label",
            __source: {
                fileName: "C:\\Users\\Zaman\\zaman\\AF\\front\\src\\editor\\update\\updateconference.js",
                lineNumber: 105
            },
            __self: this
        }, "Description"), /*#__PURE__*/ _reactDefault.default.createElement("textarea", {
            type: "textarea",
            className: "form-control",
            id: "description",
            name: "description",
            value: this.state.description,
            onChange: this.onChange,
            __source: {
                fileName: "C:\\Users\\Zaman\\zaman\\AF\\front\\src\\editor\\update\\updateconference.js",
                lineNumber: 108
            },
            __self: this
        })), /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: "mb-3",
            __source: {
                fileName: "C:\\Users\\Zaman\\zaman\\AF\\front\\src\\editor\\update\\updateconference.js",
                lineNumber: 118
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement("label", {
            htmlFor: "subjectName",
            className: "form-label",
            __source: {
                fileName: "C:\\Users\\Zaman\\zaman\\AF\\front\\src\\editor\\update\\updateconference.js",
                lineNumber: 119
            },
            __self: this
        }, "Speaker"), /*#__PURE__*/ _reactDefault.default.createElement("input", {
            type: "text",
            className: "form-control",
            id: "speaker",
            name: "speaker",
            value: this.state.speaker,
            onChange: this.onChange,
            __source: {
                fileName: "C:\\Users\\Zaman\\zaman\\AF\\front\\src\\editor\\update\\updateconference.js",
                lineNumber: 122
            },
            __self: this
        })), /*#__PURE__*/ _reactDefault.default.createElement("button", {
            type: "submit",
            className: "btn btn-primary",
            __source: {
                fileName: "C:\\Users\\Zaman\\zaman\\AF\\front\\src\\editor\\update\\updateconference.js",
                lineNumber: 132
            },
            __self: this
        }, "Submit"))));
    }
}
exports.default = UpdateConference;

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}